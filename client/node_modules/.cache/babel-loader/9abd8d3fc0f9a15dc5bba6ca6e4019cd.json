{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utente\\\\Desktop\\\\React tutorial\\\\todo-list\\\\src\\\\Container.js\";\nimport React from 'react';\nimport './Container.css';\nimport ElementPusher from './ElementPusher';\nimport ItemsList from './ItemsList';\nimport Item from './Item';\n\nconst uuidv4 = require('uuid/v4');\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(ElementPusher, {\n      onClick: name => this.handleAddElement(name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(ItemsList, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n  handleAddElement(name) {\n    let items = this.state.items.slice();\n    let uuid = uuidv4();\n    items.push(React.createElement(Item, {\n      removeElement: () => this.removeElement(uuid),\n      content: name,\n      key: uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n    console.log(items);\n    this.setState({\n      items: items\n    });\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["C:\\Users\\utente\\Desktop\\React tutorial\\todo-list\\src\\Container.js"],"names":["React","ElementPusher","ItemsList","Item","uuidv4","require","Container","Component","constructor","props","state","items","render","name","handleAddElement","slice","uuid","push","removeElement","console","log","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAGA;;AAEDC,EAAAA,MAAM,GAAI;AACT,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAGC,IAAD,IAAU,KAAKC,gBAAL,CAAsBD,IAAtB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJD,CADD;AAUA;;AAEDG,EAAAA,gBAAgB,CAACD,IAAD,EAAO;AACtB,QAAIF,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,KAAjB,EAAZ;AACA,QAAIC,IAAI,GAAGZ,MAAM,EAAjB;AACAO,IAAAA,KAAK,CAACM,IAAN,CAAW,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,MAAM,KAAKC,aAAL,CAAmBF,IAAnB,CAA3B;AAAqD,MAAA,OAAO,EAAEH,IAA9D;AAAoE,MAAA,GAAG,EAAEG,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,SAAKU,QAAL,CAAc;AAACV,MAAAA,KAAK,EAAEA;AAAR,KAAd;AACA;;AA7BsC;;AAgCxC,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport './Container.css';\nimport ElementPusher from './ElementPusher'\nimport ItemsList from './ItemsList'\nimport Item from './Item'\nconst uuidv4 = require('uuid/v4');\n\nclass Container extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t};\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<ElementPusher onClick={(name) => this.handleAddElement(name)}/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<ItemsList items={this.state.items}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\thandleAddElement(name) {\n\t\tlet items = this.state.items.slice();\n\t\tlet uuid = uuidv4();\n\t\titems.push(<Item removeElement={() => this.removeElement(uuid)} content={name} key={uuid}/>);\n\t\tconsole.log(items)\n\t\tthis.setState({items: items});\n\t}\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}