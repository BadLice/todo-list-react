{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utente\\\\Desktop\\\\React tutorial\\\\react-backed\\\\todo-list\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport SessionManager from './SessionManager';\nimport { Redirect } from \"react-router-dom\";\n\nvar SHA256 = require(\"crypto-js/sha256\");\n\nclass Login extends React.Component {\n  // static isValidLogin = false;\n  constructor(props) {\n    super(props);\n    this.context.isValidLogin = false;\n  }\n\n  handleLogin(username, password) {\n    fetch('/login', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"username\": username,\n        \"password\": SHA256(password).toString()\n      })\n    }).then(res => res.json()).then(result => {\n      this.context.isValidLogin = result.valid;\n      this.context.sessionId = result.sessionId; // console.log(SessionManager.sessionId)\n\n      this.setState({});\n    });\n  }\n\n  render() {\n    if (this.context.isValidLogin) {\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"login page\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"username:\", React.createElement(\"input\", {\n      ref: \"usernameInput\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"password:\", React.createElement(\"input\", {\n      ref: \"passwordInput\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.handleLogin(this.refs.usernameInput.value, this.refs.passwordInput.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"submit\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\utente\\Desktop\\React tutorial\\react-backed\\todo-list\\src\\components\\Login.js"],"names":["React","SessionManager","Redirect","SHA256","require","Login","Component","constructor","props","context","isValidLogin","handleLogin","username","password","fetch","method","headers","body","JSON","stringify","toString","then","res","json","result","valid","sessionId","setState","render","refs","usernameInput","value","passwordInput"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAA0B,kBAA1B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAEnC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,OAAL,CAAaC,YAAb,GAA0B,KAA1B;AACA;;AAEDC,EAAAA,WAAW,CAACC,QAAD,EAAUC,QAAV,EAAoB;AAC9BC,IAAAA,KAAK,CAAC,QAAD,EAAU;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB,OAFI;AAGbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrB,oBAAYP,QADS;AAErB,oBAAYT,MAAM,CAACU,QAAD,CAAN,CAAiBO,QAAjB;AAFS,OAAf;AAHO,KAAV,CAAL,CAQCC,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CASMG,MAAM,IAAI;AACf,WAAKf,OAAL,CAAaC,YAAb,GAA4Bc,MAAM,CAACC,KAAnC;AACA,WAAKhB,OAAL,CAAaiB,SAAb,GAAyBF,MAAM,CAACE,SAAhC,CAFe,CAGf;;AACA,WAAKC,QAAL,CAAc,EAAd;AACA,KAdD;AAgBA;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKnB,OAAL,CAAaC,YAAhB,EAA8B;AAC7B,aAAQ,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACA,KAFD,MAIC,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,GAAG,EAAC,eAAX;AAA2B,MAAA,IAAI,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADN,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEC;AAAO,MAAA,GAAG,EAAC,eAAX;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CANF,EAUM;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiB,KAAKkB,IAAL,CAAUC,aAAV,CAAwBC,KAAzC,EAA+C,KAAKF,IAAL,CAAUG,aAAV,CAAwBD,KAAvE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVN,CAFD,CADA;AAiBD;;AAjDkC;;AAoDpC,eAAe1B,KAAf","sourcesContent":["import React from 'react';\r\nimport SessionManager from './SessionManager'\r\nimport { Redirect  } from \"react-router-dom\";\r\nvar SHA256 = require(\"crypto-js/sha256\");\r\n\r\nclass Login extends React.Component {\r\n\r\n\t// static isValidLogin = false;\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.context.isValidLogin=false;\r\n\t}\r\n\r\n\thandleLogin(username,password) {\r\n\t\tfetch('/login',{\r\n\t\t\t method: 'post',\r\n\t\t\t headers: {'Content-Type':'application/json'},\r\n\t\t\t body: JSON.stringify({\r\n\t\t\t\t\"username\": username,\r\n\t\t\t\t\"password\": SHA256(password).toString()\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(result => {\r\n\t\t\tthis.context.isValidLogin = result.valid;\r\n\t\t\tthis.context.sessionId = result.sessionId;\r\n\t\t\t// console.log(SessionManager.sessionId)\r\n\t\t\tthis.setState({});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.context.isValidLogin) {\r\n\t\t\treturn (<Redirect to=\"/home\"/>);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p>login page</p>\r\n\t\t\t\t<div>\r\n\t         <label>\r\n\t           username:\r\n\t           <input ref=\"usernameInput\" type=\"text\"/>\r\n\t         </label>\r\n\r\n\t\t\t\t\t <label>\r\n\t\t\t\t\t\t password:\r\n\t\t\t\t\t\t <input ref=\"passwordInput\" type=\"password\" />\r\n\t\t\t\t\t </label>\r\n\t         <button onClick={() => this.handleLogin(this.refs.usernameInput.value,this.refs.passwordInput.value)}>submit</button>\r\n\t       </div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}