{"version":3,"sources":["ElementPusher.js","Item.js","ItemsList.js","Container.js","serviceWorker.js","index.js"],"names":["ElementPusher","className","ref","placeholder","onKeyDown","event","handlePushBtnPressed","onClick","key","this","props","refs","pushTextfield","value","React","Component","Item","onDragOver","e","dragOver","onDrop","completed","defaultValue","name","onBlur","changeName","itemNameTextfield","date","toLocaleDateString","toLocaleTimeString","priority","onChange","changePriority","itemPrioritySelect","completeTask","removeElement","onDragStart","setActiveDragItem","draggable","ItemsList","activeItem","uuid","stopPropagation","preventDefault","swapItems","state","nameSort","dateSort","prioritySort","items","length","itemInstances","map","x","key1","key2","changeItemName","sortByName","setState","sortByDate","sortByPriority","colSpan","uuidv4","require","Container","instances","handleAddElement","handleSwapItems","handleChangePriority","handleCompleteTask","order","handleSortByPriority","handleSortByDate","handleSortByName","firstIndex","indexOf","secondIndex","splice","sort","a","b","reverse","bind","Date","push","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0262af43.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ElementPusher.css';\r\n\r\nclass ElementPusher extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input className=\"w3-input\" ref=\"pushTextfield\" placeholder=\"Insert item's name\" onKeyDown={(event) => this.handlePushBtnPressed(event)}/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button className=\"w3-btn w3-pink\" onClick={() => this.handlePushBtnPressed()}>Add task</button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n\r\n\t\thandlePushBtnPressed(event)\r\n\t\t{\r\n\t\t\tif(!event || event.key ===\"Enter\")\r\n\t\t\t{\r\n\t\t\t\tthis.props.onClick(this.refs.pushTextfield.value); this.refs.pushTextfield.value='';\r\n\t\t\t}\r\n\t\t}\r\n\r\n}\r\n\r\nexport default ElementPusher;\r\n","import React from 'react';\r\nimport ItemsList from './ItemsList'\r\n\r\nclass Item extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<tr onDragOver={(e) => this.dragOver(e)} onDrop={(e) => this.onDrop(e)}  className={this.props.completed ? \"strikeout\" : ''}>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t\t<input className=\"w3-input item-name\" defaultValue={this.props.name} ref=\"itemNameTextfield\" onBlur={() => this.props.changeName(this.refs.itemNameTextfield.value)}/>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{this.props.date.toLocaleDateString(\"it-IT\")}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{this.props.date.toLocaleTimeString(\"it-IT\")}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select className=\"w3-select\" ref=\"itemPrioritySelect\" value={this.props.priority} onChange={() => this.props.changePriority(this.refs.itemPrioritySelect.value)}>\r\n\t\t\t\t\t\t<option value=\"0\">--</option>\r\n\t\t\t\t\t\t<option value=\"1\">Low</option>\r\n\t\t\t\t\t\t<option value=\"2\">Medium</option>\r\n\t\t\t\t\t\t<option value=\"3\">High</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td className=\"action-col\">\r\n\t\t\t\t\t<button className={\"w3-btn w3-blue \" + (this.props.completed ? \"w3-grey w3-opacity\" : '')} onClick={this.props.completeTask}>Completed</button>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td className=\"action-col\">\r\n\t\t\t\t\t<button className={\"w3-btn w3-red \" + (!this.props.completed ? \"hidden\" : \"\")} onClick={this.props.removeElement}>Remove</button>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td className=\"action-col\" onDragStart={(e) => this.setActiveDragItem(e)} draggable={true} >â˜°</td>\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\r\n\tsetActiveDragItem(e) {\r\n\t\tItemsList.activeItem = this.props.uuid;\r\n\t}\r\n\r\n\tdragOver(e) {\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tonDrop(e) {\r\n\t\tthis.props.swapItems(ItemsList.activeItem,this.props.uuid);\r\n\t\tItemsList.activeItem = null;\r\n\t}\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from './Item'\r\n// import './ItemsList.css';\r\n\r\n\r\nclass ItemsList extends React.Component {\r\n\r\n\tstatic activeItem = null;\r\n\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tnameSort: null,\r\n\t\t\tdateSort: null,\r\n\t\t\tprioritySort: null,\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\tif(this.props.items.length>0)\r\n\t\t{\r\n\t\t\tlet itemInstances = this.props.items.map((x) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item swapItems={(key1,key2) => this.props.swapItems(key1,key2)} changeName={(name) => this.props.changeItemName(name,x.key)}\r\n\t\t\t\t\t changePriority={(priority) => this.props.changePriority(priority,x.key)}\r\n\t\t\t\t\t\tcompleteTask={() => this.props.completeTask(x.key)}\r\n\t\t\t\t\t\t removeElement={() => this.props.removeElement(x.key)}\r\n\t\t\t\t\t\t\tcompleted={x.completed}\r\n\t\t\t\t\t\t\t name={x.name} date={x.date} key={x.key} uuid={x.key}/>\r\n\t\t\t\t\t\t )})\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<table className=\"w3-table w3-bordered\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr className=\"w3-cyan\">\r\n\t\t\t\t\t\t\t\t<th onClick={() => {this.props.sortByName(this.state.nameSort); this.setState({\tdateSort: null, prioritySort: null, nameSort: !this.state.nameSort ? true : !this.state.nameSort})}}>Name <span>{this.state.nameSort !== null && (this.state.nameSort ? \t'â–¼' : 'â–²')}</span></th>\r\n\t\t\t\t\t\t\t\t<th onClick={() => {this.props.sortByDate(this.state.dateSort); this.setState({\tnameSort: null, prioritySort: null, dateSort: !this.state.dateSort ? true : !this.state.dateSort})}}>Date <span>{this.state.dateSort !== null && (this.state.dateSort ? \t'â–¼' : 'â–²')}</span></th>\r\n\t\t\t\t\t\t\t\t<th>Hour</th>\r\n\t\t\t\t\t\t\t\t<th onClick={() => {this.props.sortByPriority(this.state.prioritySort); this.setState({nameSort: null, dateSort: null,prioritySort: !this.state.prioritySort ? true : !this.state.prioritySort})}}>Priority <span>{this.state.prioritySort !== null && (this.state.prioritySort ? \t'â–¼' : 'â–²')}</span></th>\r\n\t\t\t\t\t\t\t\t<th colSpan=\"3\">Actions</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{itemInstances}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn '';\r\n\t}\r\n\r\n}\r\n\r\nexport default ItemsList;\r\n","import React from 'react';\nimport './Container.css';\nimport ElementPusher from './ElementPusher'\nimport ItemsList from './ItemsList'\nconst uuidv4 = require('uuid/v4');\n\nclass Container extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tinstances : [],\n\t\t};\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"w3-container\">\n\t\t\t\t<div className=\"w3-container\">\n\t\t\t\t\t<ElementPusher onClick={(name) => this.handleAddElement(name)}/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<ItemsList swapItems={(key1,key2) => this.handleSwapItems(key1,key2)} removeElement={(uuid) => this.removeElement(uuid)} changePriority={(priority,uuid) => this.handleChangePriority(priority,uuid)} changeItemName={(name,uuid) => this.changeItemName(name,uuid)} completeTask={(uuid) => this.handleCompleteTask(uuid)} items={this.state.items} sortByPriority={(order) => this.handleSortByPriority(order)} sortByDate={(order) => this.handleSortByDate(order)} sortByName={(order) => this.handleSortByName(order)}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\thandleSwapItems(key1,key2) {\n\t\tlet items = [...this.state.items];\n\t\tlet firstIndex = items.map(x => x.key).indexOf(key1);\n\t\tlet secondIndex = items.map(x => x.key).indexOf(key2);\n\t\titems[firstIndex] = items.splice(secondIndex, 1, items[firstIndex])[0];\n\t\tthis.setState({items: items});\n\t}\n\n\thandleSortByName(order) {\n\t\tlet items = [...this.state.items];\n\t\titems.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n\t\tif(order)\n\t\t\titems.reverse();\n\t\tthis.setState({items: items});\n\t}\n\n\thandleSortByDate(order) {\n\t\tlet items = [...this.state.items];\n\t\titems.sort((a,b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0));\n\t\tif(order)\n\t\t\titems.reverse();\n\t\tthis.setState({items: items});\n\t}\n\n\thandleSortByPriority(order) {\n\t\tlet items = [...this.state.items];\n\t\titems.sort((a,b) => (a.priority > b.priority) ? 1 : ((b.priority > a.priority) ? -1 : 0));\n\t\tif(order)\n\t\t\titems.reverse();\n\t\tthis.setState({items: items});\n\t}\n\n\tremoveElement(uuid) {\n\t\tlet items = [...this.state.items];\n\t\titems.splice(items.map(e => {return e.key}).indexOf(uuid),1);\n\t\tthis.setState({items: items});\n\t}\n\n\tchangeItemName(name,key) {\n\t\tlet items = [...this.state.items];\n\t\titems.map((x => x.key === key && (x.name = name)).bind({name:name,key:key}));\n\t\tthis.setState({items:items});\n\t}\n\n\thandleChangePriority(priority,key) {\n\t\tlet items = [...this.state.items];\n\t\titems.map( (x => x.key === key && (x.priority = priority)).bind({priority: priority, key: key}));\n\t\tthis.setState({items:items});\n\t}\n\n\thandleCompleteTask(key) {\n\t\tlet items = [...this.state.items];\n\t\titems.map((x => x.key === key && (x.completed = !x.completed)).bind({key: key}));\n\t\tthis.setState({items:items});\n\t}\n\n\thandleAddElement(name) {\n\t\tif(name && name.length>0) {\n\t\t\tlet items = [...this.state.items];\n\t\t\tlet uuid = uuidv4();\n\t\t\tlet date = new Date();\n\n\t\t\titems.push({\n\t\t\t\tkey: uuid,\n\t\t\t\tdate: date,\n\t\t\t\tname: name,\n\t\t\t\tpriority: \"0\",\n\t\t\t\tcompleted: false,\n\t\t\t});\n\n\t\t\tthis.setState({items: items});\n\t\t}\n\t}\n}\n\nexport default Container;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Container from './Container';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Container />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}